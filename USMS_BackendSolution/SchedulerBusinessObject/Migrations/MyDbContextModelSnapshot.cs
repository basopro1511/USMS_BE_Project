// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchedulerBusinessObject.AppDBContext;

#nullable disable

namespace SchedulerBusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.ExamSchedule", b =>
                {
                    b.Property<int>("ExamScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("DATE");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("TIME(7)");

                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("RoomId")
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<string>("SemesterId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("TIME(7)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TeacherId")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<int>("Turn")
                        .HasColumnType("INT");

                    b.Property<int>("Type")
                        .HasColumnType("INT");

                    b.HasKey("ExamScheduleId");

                    b.ToTable("ExamSchedule");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Room", b =>
                {
                    b.Property<string>("RoomId")
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            RoomId = "G201",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7533),
                            Location = "Grammar Room 201",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7545)
                        },
                        new
                        {
                            RoomId = "G202",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7547),
                            Location = "Grammar Room 202",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7547)
                        },
                        new
                        {
                            RoomId = "G203",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7549),
                            Location = "Grammar Room 203",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7549)
                        },
                        new
                        {
                            RoomId = "G204",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7551),
                            Location = "Grammar Room 204",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7551)
                        },
                        new
                        {
                            RoomId = "G205",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7552),
                            Location = "Grammar Room 205",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7553)
                        },
                        new
                        {
                            RoomId = "G301",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7554),
                            Location = "Grammar Room 301",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7555)
                        },
                        new
                        {
                            RoomId = "G302",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7556),
                            Location = "Grammar Room 302",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7556)
                        },
                        new
                        {
                            RoomId = "G303",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7557),
                            Location = "Grammar Room 303",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7558)
                        },
                        new
                        {
                            RoomId = "G304",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7559),
                            Location = "Grammar Room 304",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7560)
                        },
                        new
                        {
                            RoomId = "G305",
                            CreateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7561),
                            Location = "Grammar Room 305",
                            Status = 1,
                            UpdateAt = new DateTime(2025, 2, 28, 15, 1, 6, 115, DateTimeKind.Local).AddTicks(7561)
                        });
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("INT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<int>("SlotId")
                        .HasColumnType("INT");

                    b.Property<int>("SlotNoInSubject")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("TeacherId")
                        .HasColumnType("NVARCHAR(16)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SlotId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.StudentInExamSchedule", b =>
                {
                    b.Property<int>("StudentExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentExamId"));

                    b.Property<int>("ExamScheduleId")
                        .HasColumnType("INT");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(16)");

                    b.HasKey("StudentExamId");

                    b.HasIndex("ExamScheduleId");

                    b.ToTable("StudentInExamSchedule");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.TimeSlot", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlotId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("TIME(0)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("TIME(0)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.HasKey("SlotId");

                    b.ToTable("TimeSlot");

                    b.HasData(
                        new
                        {
                            SlotId = 1,
                            EndTime = new TimeOnly(9, 15, 0),
                            StartTime = new TimeOnly(7, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            SlotId = 2,
                            EndTime = new TimeOnly(11, 45, 0),
                            StartTime = new TimeOnly(9, 30, 0),
                            Status = 1
                        },
                        new
                        {
                            SlotId = 3,
                            EndTime = new TimeOnly(15, 15, 0),
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            SlotId = 4,
                            EndTime = new TimeOnly(17, 45, 0),
                            StartTime = new TimeOnly(15, 30, 0),
                            Status = 1
                        },
                        new
                        {
                            SlotId = 5,
                            EndTime = new TimeOnly(20, 15, 0),
                            StartTime = new TimeOnly(18, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Schedule", b =>
                {
                    b.HasOne("SchedulerBusinessObject.SchedulerModels.Room", "Room")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchedulerBusinessObject.SchedulerModels.TimeSlot", "Slot")
                        .WithMany("Schedules")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.StudentInExamSchedule", b =>
                {
                    b.HasOne("SchedulerBusinessObject.SchedulerModels.ExamSchedule", null)
                        .WithMany("StudentInExamSchedules")
                        .HasForeignKey("ExamScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.ExamSchedule", b =>
                {
                    b.Navigation("StudentInExamSchedules");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Room", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.TimeSlot", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
