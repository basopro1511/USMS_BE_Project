// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchedulerBusinessObject.AppDBContext;

#nullable disable

namespace SchedulerBusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Rooms", b =>
                {
                    b.Property<string>("RoomId")
                        .HasMaxLength(6)
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("OnlineURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isOnline")
                        .HasColumnType("bit");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = "G304",
                            CreateAt = new DateTime(2024, 11, 25, 19, 58, 48, 182, DateTimeKind.Local).AddTicks(7261),
                            Location = "Grammar Room 304",
                            Status = 1,
                            UpdateAt = new DateTime(2024, 11, 25, 19, 58, 48, 182, DateTimeKind.Local).AddTicks(7272),
                            isOnline = false
                        },
                        new
                        {
                            RoomId = "R.ON",
                            CreateAt = new DateTime(2024, 11, 25, 19, 58, 48, 182, DateTimeKind.Local).AddTicks(7276),
                            Location = "Online",
                            OnlineURL = "https://meet.google.com/koi-kghw-tsy",
                            Status = 1,
                            UpdateAt = new DateTime(2024, 11, 25, 19, 58, 48, 182, DateTimeKind.Local).AddTicks(7277),
                            isOnline = true
                        });
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Schedules", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("INT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<int>("SlotId")
                        .HasColumnType("INT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<string>("TeacherId")
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR(8)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SlotId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Semesters", b =>
                {
                    b.Property<string>("SemesterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.TimeSlots", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlotId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("SlotId");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            SlotId = 1,
                            EndTime = new TimeOnly(9, 15, 0),
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            SlotId = 2,
                            EndTime = new TimeOnly(11, 45, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            SlotId = 3,
                            EndTime = new TimeOnly(15, 15, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            SlotId = 4,
                            EndTime = new TimeOnly(17, 45, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            SlotId = 5,
                            EndTime = new TimeOnly(20, 15, 0),
                            StartTime = new TimeOnly(18, 0, 0)
                        });
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Schedules", b =>
                {
                    b.HasOne("SchedulerBusinessObject.SchedulerModels.Rooms", "Room")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchedulerBusinessObject.SchedulerModels.TimeSlots", "Slot")
                        .WithMany("Schedules")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.Rooms", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SchedulerBusinessObject.SchedulerModels.TimeSlots", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
