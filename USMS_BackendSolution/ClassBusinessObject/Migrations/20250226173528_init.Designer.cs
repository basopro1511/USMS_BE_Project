// <auto-generated />
using System;
using ClassBusinessObject.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassBusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250226173528_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassBusinessObject.Models.ClassSubject", b =>
                {
                    b.Property<int>("ClassSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassSubjectId"));

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("SemesterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("ClassSubjectId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassSubject");
                });

            modelBuilder.Entity("ClassBusinessObject.Models.Semester", b =>
                {
                    b.Property<string>("SemesterId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SemesterId");

                    b.ToTable("Semester");

                    b.HasData(
                        new
                        {
                            SemesterId = "SP25",
                            EndDate = new DateOnly(2025, 3, 24),
                            SemesterName = "Spring2025",
                            StartDate = new DateOnly(2025, 1, 5),
                            Status = 1
                        },
                        new
                        {
                            SemesterId = "SU25",
                            EndDate = new DateOnly(2025, 8, 11),
                            SemesterName = "Summer2025",
                            StartDate = new DateOnly(2025, 5, 8),
                            Status = 1
                        },
                        new
                        {
                            SemesterId = "FA25",
                            EndDate = new DateOnly(2025, 11, 25),
                            SemesterName = "Fall2025",
                            StartDate = new DateOnly(2025, 9, 5),
                            Status = 1
                        });
                });

            modelBuilder.Entity("ClassBusinessObject.Models.StudentInClass", b =>
                {
                    b.Property<int>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentClassId"));

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("INT");

                    b.Property<string>("StudentId")
                        .HasColumnType("NVARCHAR(16)");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentInClass");
                });

            modelBuilder.Entity("ClassBusinessObject.Models.Subject", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("NumberOfSlot")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            SubjectId = "MAE101",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(220),
                            Description = "Engineering mathematics fundamentals",
                            MajorId = "SE",
                            NumberOfSlot = 25,
                            Status = 1,
                            SubjectName = "Mathematics for Engineering",
                            Term = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(234)
                        },
                        new
                        {
                            SubjectId = "PRF192",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(237),
                            Description = "Learn the basics of programming",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 1,
                            SubjectName = "Programming Fundamentals",
                            Term = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(238)
                        },
                        new
                        {
                            SubjectId = "CEA201",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(240),
                            Description = "Introduction to computer architecture",
                            MajorId = "SE",
                            NumberOfSlot = 18,
                            Status = 1,
                            SubjectName = "Computer Organization and Architecture",
                            Term = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(240)
                        },
                        new
                        {
                            SubjectId = "SSL101c",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(242),
                            Description = "Skills for academic excellence",
                            NumberOfSlot = 15,
                            Status = 1,
                            SubjectName = "Academic Skills for University Success",
                            Term = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(242)
                        },
                        new
                        {
                            SubjectId = "MAD101",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(244),
                            Description = "Fundamentals of discrete math",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 1,
                            SubjectName = "Discrete Mathematics",
                            Term = 2,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(245)
                        },
                        new
                        {
                            SubjectId = "NWC203c",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(246),
                            Description = "Introduction to networking concepts",
                            MajorId = "SE",
                            NumberOfSlot = 18,
                            Status = 1,
                            SubjectName = "Computer Networking",
                            Term = 2,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(246)
                        },
                        new
                        {
                            SubjectId = "DBI202",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(248),
                            Description = "Database concepts and design",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 1,
                            SubjectName = "Database Systems",
                            Term = 3,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(248)
                        },
                        new
                        {
                            SubjectId = "LAB211",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(250),
                            Description = "Practice Object-Oriented Programming",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 1,
                            SubjectName = "OOP with Java Lab",
                            Term = 3,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(251)
                        },
                        new
                        {
                            SubjectId = "PRJ301",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(252),
                            Description = "Developing web apps using Java",
                            MajorId = "SE",
                            NumberOfSlot = 25,
                            Status = 1,
                            SubjectName = "Java Web Application Development",
                            Term = 4,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(253)
                        },
                        new
                        {
                            SubjectId = "MAS291",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(254),
                            Description = "Introduction to statistics",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 1,
                            SubjectName = "Statistics & Probability",
                            Term = 4,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(255)
                        },
                        new
                        {
                            SubjectId = "SWP391",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(256),
                            Description = "Capstone project in software development",
                            MajorId = "SE",
                            NumberOfSlot = 30,
                            Status = 1,
                            SubjectName = "Software Development Project",
                            Term = 5,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(257)
                        },
                        new
                        {
                            SubjectId = "PRN231",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(258),
                            Description = "Developing cross-platform applications",
                            MajorId = "SE",
                            NumberOfSlot = 20,
                            Status = 0,
                            SubjectName = "Building Cross-Platform Back-End Application With .NET",
                            Term = 7,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(259)
                        },
                        new
                        {
                            SubjectId = "MLN111",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(260),
                            Description = "Core principles of Marxism-Leninism",
                            NumberOfSlot = 16,
                            Status = 2,
                            SubjectName = "Philosophy of Marxism – Leninism",
                            Term = 8,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(261)
                        },
                        new
                        {
                            SubjectId = "WDU203c",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(262),
                            Description = "Introduction to UI/UX principles",
                            MajorId = "SE",
                            NumberOfSlot = 18,
                            Status = 1,
                            SubjectName = "UI/UX Design",
                            Term = 8,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 35, 27, 621, DateTimeKind.Local).AddTicks(263)
                        });
                });

            modelBuilder.Entity("ClassBusinessObject.Models.ClassSubject", b =>
                {
                    b.HasOne("ClassBusinessObject.Models.Semester", "Semester")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassBusinessObject.Models.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ClassBusinessObject.Models.Semester", b =>
                {
                    b.Navigation("ClassSubjects");
                });

            modelBuilder.Entity("ClassBusinessObject.Models.Subject", b =>
                {
                    b.Navigation("ClassSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
