// <auto-generated />
using System;
using BusinessObject.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241128153813_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = "CE170288",
                            Address = "Phong Điền, Cần Thơ",
                            Name = "Nguyễn Quốc Hoàng",
                            Phone = "0333744591"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Major", b =>
                {
                    b.Property<string>("MajorId")
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorId");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            MajorId = "IB",
                            MajorName = "International Business"
                        },
                        new
                        {
                            MajorId = "IT",
                            MajorName = "Information Technology"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Academic Staff"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Chairperson"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Lecture"
                        },
                        new
                        {
                            RoleId = 5,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = "IT0001",
                            CreatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(1993),
                            Email = "ANVIT0001.a@university.edu",
                            FirstName = "Nguyen",
                            LastName = "A",
                            MiddleName = "Van",
                            PasswordHash = "hashedpassword1",
                            PersonalEmail = "van.a@gmail.com",
                            PhoneNumber = "0123456789",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(2003)
                        },
                        new
                        {
                            UserId = "IB0001",
                            CreatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(2044),
                            Email = "BTTIB0001.b@university.edu",
                            FirstName = "Tran",
                            LastName = "B",
                            MiddleName = "Thi",
                            PasswordHash = "hashedpassword2",
                            PersonalEmail = "thi.b@gmail.com",
                            PhoneNumber = "0987654321",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(2044)
                        },
                        new
                        {
                            UserId = "AD0001",
                            CreatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(2046),
                            Email = "admin0001@university.edu",
                            FirstName = "Nguyen",
                            LastName = "Admin",
                            MiddleName = "Tuan",
                            PasswordHash = "hashedpassword3",
                            PersonalEmail = "admin0001@gmail.edu",
                            PhoneNumber = "0123456780",
                            RoleId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 11, 28, 22, 38, 13, 496, DateTimeKind.Local).AddTicks(2046)
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.HasOne("BusinessObject.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
