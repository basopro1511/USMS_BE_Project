// <auto-generated />
using System;
using BusinessObject.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250226173424_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.Major", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("MajorId");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            MajorId = "SE",
                            MajorName = "Kỹ thuật phần mềm"
                        },
                        new
                        {
                            MajorId = "BA",
                            MajorName = "Quản trị kinh doanh"
                        },
                        new
                        {
                            MajorId = "LG",
                            MajorName = "Ngôn ngữ"
                        },
                        new
                        {
                            MajorId = "CT",
                            MajorName = "Công nghệ truyền thông"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Academic Staff"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Chairperson"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Teacher"
                        },
                        new
                        {
                            RoleId = 5,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<int>("Term")
                        .HasColumnType("INT");

                    b.HasKey("StudentId");

                    b.HasIndex("MajorId");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentId = "SE0001",
                            MajorId = "SE",
                            Term = 1
                        },
                        new
                        {
                            StudentId = "SE0002",
                            MajorId = "SE",
                            Term = 1
                        },
                        new
                        {
                            StudentId = "BA0003",
                            MajorId = "BA",
                            Term = 2
                        },
                        new
                        {
                            StudentId = "LG0004",
                            MajorId = "LG",
                            Term = 3
                        },
                        new
                        {
                            StudentId = "CT0005",
                            MajorId = "CT",
                            Term = 4
                        },
                        new
                        {
                            StudentId = "SE0006",
                            MajorId = "SE",
                            Term = 5
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAvartar")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("UserId");

                    b.HasIndex("MajorId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = "AD0001",
                            Address = "FPT Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5257),
                            DateOfBirth = new DateOnly(2005, 11, 15),
                            Email = "Admin@fpt.edu.vn",
                            FirstName = "Nguyễn",
                            Gender = false,
                            LastName = "Hoàng",
                            MajorId = "SE",
                            MiddleName = "Quốc",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Admin@gmail.com",
                            PhoneNumber = "0333744591",
                            RoleId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5265),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "SE0001",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5270),
                            DateOfBirth = new DateOnly(2005, 11, 15),
                            Email = "HoangNQCE170288@fpt.edu.vn",
                            FirstName = "Nguyễn",
                            Gender = false,
                            LastName = "Hoàng",
                            MajorId = "SE",
                            MiddleName = "Quốc",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Hoang@gmail.com",
                            PhoneNumber = "0333744591",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5270),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "SE0002",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5275),
                            DateOfBirth = new DateOnly(2004, 9, 10),
                            Email = "TungTTCE170289@fpt.edu.vn",
                            FirstName = "Trần",
                            Gender = false,
                            LastName = "Tùng",
                            MajorId = "SE",
                            MiddleName = "Thanh",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Tung@gmail.com",
                            PhoneNumber = "0322114477",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5275),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "BA0003",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5278),
                            DateOfBirth = new DateOnly(2003, 12, 5),
                            Email = "NhungLHBA170290@fpt.edu.vn",
                            FirstName = "Lê",
                            Gender = true,
                            LastName = "Nhung",
                            MajorId = "BA",
                            MiddleName = "Hồng",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Nhung@gmail.com",
                            PhoneNumber = "0987654321",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5279),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "LG0004",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5281),
                            DateOfBirth = new DateOnly(2002, 5, 20),
                            Email = "ChauPMLG170291@fpt.edu.vn",
                            FirstName = "Phạm",
                            Gender = true,
                            LastName = "Châu",
                            MajorId = "LG",
                            MiddleName = "Minh",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Chau@gmail.com",
                            PhoneNumber = "0978111222",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5282),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "CT0005",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5285),
                            DateOfBirth = new DateOnly(2003, 7, 30),
                            Email = "DungDVCT170292@fpt.edu.vn",
                            FirstName = "Đinh",
                            Gender = false,
                            LastName = "Dũng",
                            MajorId = "CT",
                            MiddleName = "Văn",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Dung@gmail.com",
                            PhoneNumber = "0966998844",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5285),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        },
                        new
                        {
                            UserId = "SE0006",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5288),
                            DateOfBirth = new DateOnly(2001, 8, 25),
                            Email = "CuongVMIT170293@fpt.edu.vn",
                            FirstName = "Vũ",
                            Gender = false,
                            LastName = "Cường",
                            MajorId = "SE",
                            MiddleName = "Mạnh",
                            PasswordHash = "FeKw08M4keuw8e9gnsQZQgwg4yDOlMZfvIwzEkSOsiU=",
                            PersonalEmail = "Cuong@gmail.com",
                            PhoneNumber = "0356677889",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 2, 27, 0, 34, 24, 152, DateTimeKind.Local).AddTicks(5289),
                            UserAvartar = "https://res.cloudinary.com/djvanrbcm/image/upload/v1740590249/uso41p6xyup6xbnhufs7.jpg"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Student", b =>
                {
                    b.HasOne("BusinessObject.Models.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId");

                    b.HasOne("BusinessObject.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("BusinessObject.Models.Student", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.HasOne("BusinessObject.Models.Major", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId");

                    b.HasOne("BusinessObject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObject.Models.Major", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
