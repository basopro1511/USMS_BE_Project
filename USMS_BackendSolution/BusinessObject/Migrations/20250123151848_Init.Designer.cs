// <auto-generated />
using System;
using BusinessObject.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250123151848_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.Major", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("MajorId");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            MajorId = "IT",
                            MajorName = "Information Technology"
                        },
                        new
                        {
                            MajorId = "BA",
                            MajorName = "Business Administration"
                        },
                        new
                        {
                            MajorId = "MT",
                            MajorName = "Media Technology"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Academic Staff"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Chairperson"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Teacher"
                        },
                        new
                        {
                            RoleId = 5,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<int>("Term")
                        .HasColumnType("INT");

                    b.HasKey("StudentId");

                    b.HasIndex("MajorId");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentId = "CE170288",
                            MajorId = "IT",
                            Term = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("MajorId")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAvartar")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("UserId");

                    b.HasIndex("MajorId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = "CE170288",
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 1, 23, 22, 18, 45, 942, DateTimeKind.Local).AddTicks(8438),
                            DateOfBirth = new DateOnly(2025, 11, 15),
                            Email = "HoangNQCE170288@fpt.edu.vn",
                            FirstName = "Nguyễn",
                            LastName = "Hoàng",
                            MajorId = "IT",
                            MiddleName = "Quốc",
                            PasswordHash = "123456",
                            PersonalEmail = "Hoang@gmail.com",
                            PhoneNumber = "0333744591",
                            RoleId = 5,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 1, 23, 22, 18, 45, 942, DateTimeKind.Local).AddTicks(8450)
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Student", b =>
                {
                    b.HasOne("BusinessObject.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId");

                    b.HasOne("BusinessObject.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("BusinessObject.Models.Student", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.HasOne("BusinessObject.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId");

                    b.HasOne("BusinessObject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
